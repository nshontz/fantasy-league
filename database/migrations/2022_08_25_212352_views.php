<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Support\Facades\Schema;

return new class extends Migration {
    /**
     * Run the migrations.
     *
     * @return void
     */
    public function up()
    {
        \Illuminate\Support\Facades\DB::statement("CREATE or replace VIEW `matchup_scores` AS select `teams`.`name` AS `home_team`,`team_opponents`.`week` AS `week`,`opponent`.`name` AS `away_team`,`opponent_score`.`played_score` AS `opponents_score`,`opponent_score`.`benched_score` AS `opponents_bench`,`home_score`.`played_score` AS `home_score`,`home_score`.`benched_score` AS `home_bench` from (((((select `matchups`.`home_team_id` AS `team_id`,`matchups`.`week` AS `week`,`matchups`.`away_team_id` AS `opponent_id` from `matchups` union select `matchups`.`away_team_id` AS `team_id`,`matchups`.`week` AS `week`,`matchups`.`home_team_id` AS `opponent_id` from `matchups`) `team_opponents` join `teams` on((`teams`.`id` = `team_opponents`.`team_id`))) join `teams` `opponent` on((`opponent`.`id` = `team_opponents`.`opponent_id`))) join `scores` `opponent_score` on(((`opponent_score`.`team_id` = `opponent`.`id`) and (`opponent_score`.`week` = `team_opponents`.`week`)))) join `scores` `home_score` on(((`home_score`.`team_id` = `teams`.`id`) and (`home_score`.`week` = `team_opponents`.`week`)))) order by `teams`.`id`,`team_opponents`.`week`");

        \Illuminate\Support\Facades\DB::statement("CREATE  or replace VIEW `cumulative_points` AS select `matchup_scores`.`home_team` AS `home_team`,round(sum(`matchup_scores`.`opponents_score`),2) AS `points_against`,round(sum(`matchup_scores`.`home_score`),2) AS `points_for`,round((sum(`matchup_scores`.`home_score`) - sum(`matchup_scores`.`opponents_score`)),2) AS `differential` from `matchup_scores` group by `matchup_scores`.`home_team`");

        \Illuminate\Support\Facades\DB::statement("CREATE or replace  VIEW `projections` AS select `teams`.`name` AS `team`,`scores`.`week` AS `week`,`scores`.`played_projected` AS `played_projected`,`scores`.`played_score` AS `played_score`,`scores`.`benched_projected` AS `benched_projected`,`scores`.`benched_score` AS `benched_score`,round((`scores`.`played_projected` + `scores`.`benched_projected`),2) AS `total_projection`,round((`scores`.`played_score` + `scores`.`benched_score`),2) AS `total_score`,round(((`scores`.`played_score` + `scores`.`benched_score`) - (`scores`.`played_projected` + `scores`.`benched_projected`)),2) AS `score_difference`,round((`scores`.`played_score` - `scores`.`benched_score`),2) AS `bench_v_played`,round((`scores`.`played_score` - `scores`.`played_projected`),2) AS `played_projection_dif` from (`scores` join `teams` on((`scores`.`team_id` = `teams`.`id`))) order by `scores`.`week`,`teams`.`name`");

        \Illuminate\Support\Facades\DB::statement("CREATE or replace  VIEW `manager_stats` AS select `a`.`team` AS `team`,`a`.`season_projections` AS `season_projections`,`a`.`season_points` AS `season_points`,`a`.`total_performance_margin` AS `total_performance_margin`,`a`.`played_performance_margin` AS `played_performance_margin`,`a`.`total_left_on_bench` AS `total_left_on_bench`,(case when ((`a`.`total_performance_margin` < 0) and (`a`.`played_performance_margin` > `a`.`total_performance_margin`)) then abs(round((`a`.`total_performance_margin` - `a`.`played_performance_margin`),2)) end) AS `management_score` from (select `projections`.`team` AS `team`,round(sum(`projections`.`total_projection`),2) AS `season_projections`,round(sum(`projections`.`total_score`),2) AS `season_points`,round((sum(`projections`.`total_score`) - sum(`projections`.`total_projection`)),2) AS `total_performance_margin`,round((sum(`projections`.`played_score`) - sum(`projections`.`played_projected`)),2) AS `played_performance_margin`,round(sum(`projections`.`benched_score`),0) AS `total_left_on_bench` from `projections` group by `projections`.`team`) `a` order by (case when (`a`.`total_performance_margin` < 0) then round((`a`.`played_performance_margin` / `a`.`total_performance_margin`),2) end),`a`.`played_performance_margin` desc");
        \Illuminate\Support\Facades\DB::statement("CREATE or replace  VIEW `awards` AS select 'Managing from behind' AS `award`,'Team scores below projection with least impact' AS `description`,(select `manager_stats`.`team` from `manager_stats` order by `manager_stats`.`management_score` desc limit 1) AS `team`,(select concat('Projection Margins: ',`manager_stats`.`total_performance_margin`,' Impact: ',`manager_stats`.`played_performance_margin`) from `manager_stats` order by `manager_stats`.`management_score` desc limit 1) AS `context` union select 'Crushing It' AS `award`,'Scored the most points ' AS `description`,(select `cumulative_points`.`home_team` from `cumulative_points` order by `cumulative_points`.`points_for` desc limit 1) AS `team`,(select concat('Points: ',`cumulative_points`.`points_for`) from `cumulative_points` order by `cumulative_points`.`points_for` desc limit 1) AS `context` union select 'rough Ride' AS `award`,'Endured most points against ' AS `description`,(select `cumulative_points`.`home_team` from `cumulative_points` order by `cumulative_points`.`points_against` desc limit 1) AS `team`,(select concat('Points: ',`cumulative_points`.`points_against`) from `cumulative_points` order by `cumulative_points`.`points_against` desc limit 1) AS `context` union select 'Smooth Sailing' AS `award`,'Endured fewest points against ' AS `description`,(select `cumulative_points`.`home_team` from `cumulative_points` order by `cumulative_points`.`points_against` limit 1) AS `team`,(select concat('Points: ',`cumulative_points`.`points_against`) from `cumulative_points` order by `cumulative_points`.`points_against` limit 1) AS `context` union select '' AS `award`,'Lowest bench Score' AS `description`,(select `matchup_scores`.`home_team` from `matchup_scores` group by `matchup_scores`.`home_team` order by round(sum(`matchup_scores`.`home_bench`),2) limit 1) AS `team`,(select concat('Points: ',round(sum(`matchup_scores`.`home_bench`),2)) from `matchup_scores` group by `matchup_scores`.`home_team` order by round(sum(`matchup_scores`.`home_bench`),2) limit 1) AS `context` union select '' AS `award`,'Highest bench Score' AS `description`,(select `matchup_scores`.`home_team` from `matchup_scores` group by `matchup_scores`.`home_team` order by round(sum(`matchup_scores`.`home_bench`),2) desc limit 1) AS `team`,concat('Points:  ',(select round(sum(`matchup_scores`.`home_bench`),2) from `matchup_scores` group by `matchup_scores`.`home_team` order by round(sum(`matchup_scores`.`home_bench`),2) desc limit 1)) AS `context` union select '' AS `award`,'Highest individual game Score' AS `description`,(select `teams`.`name` from (`scores` join `teams` on((`scores`.`team_id` = `teams`.`id`))) where (`scores`.`played_score` is not null) order by `scores`.`played_score` desc limit 1) AS `team`,(select concat('Week ',`scores`.`week`,' Points: ',`scores`.`played_score`) from (`scores` join `teams` on((`scores`.`team_id` = `teams`.`id`))) where (`scores`.`played_score` is not null) order by `scores`.`played_score` desc limit 1) AS `context` union select '' AS `award`,'Lowest individual game Score' AS `description`,(select `teams`.`name` from (`scores` join `teams` on((`scores`.`team_id` = `teams`.`id`))) where (`scores`.`played_score` is not null) order by `scores`.`played_score` limit 1) AS `team`,(select concat('Week ',`scores`.`week`,' Points: ',`scores`.`played_score`) from (`scores` join `teams` on((`scores`.`team_id` = `teams`.`id`))) where (`scores`.`played_score` is not null) order by `scores`.`played_score` limit 1) AS `context`");
        \Illuminate\Support\Facades\DB::statement("CREATE  or replace VIEW `matchup_results` AS select `matchups`.`week` AS `week`,`away_teams`.`name` AS `away_team`,`away_teams_scores`.`played_score` AS `away_score`,`home_teams_scores`.`played_score` AS `home_score`,`home_teams`.`name` AS `home_team` from ((((`matchups` join `teams` `home_teams` on((`home_teams`.`id` = `matchups`.`home_team_id`))) join `teams` `away_teams` on((`away_teams`.`id` = `matchups`.`away_team_id`))) join `scores` `home_teams_scores` on(((`home_teams`.`id` = `home_teams_scores`.`team_id`) and (`home_teams_scores`.`week` = `matchups`.`week`)))) join `scores` `away_teams_scores` on(((`away_teams`.`id` = `away_teams_scores`.`team_id`) and (`away_teams_scores`.`week` = `matchups`.`week`)))) order by `matchups`.`week`,`matchups`.`home_team_id`");
        \Illuminate\Support\Facades\DB::statement("CREATE or replace  VIEW `threshold_winners` AS select `a`.`week` AS `week`,group_concat(`a`.`winning_team` separator ',') AS `winning_team` from (select `scores`.`week` AS `week`,(case when (`scores`.`played_score` > 160) then concat(`teams`.`name`,' (',`scores`.`played_score`,')') end) AS `winning_team` from (`scores` join `teams` on((`scores`.`team_id` = `teams`.`id`)))) `a` group by `a`.`week`");

        \Illuminate\Support\Facades\DB::statement("CREATE or replace  VIEW `weekly_stats` AS select `a`.`label` AS `label`,round(avg(`a`.`Bishop Sycamore`),2) AS `Bishop Sycamore`,round(avg(`a`.`Buffalo West`),2) AS `Buffalo West`,round(avg(`a`.`Dakstreet Boys`),2) AS `Dakstreet Boys`,round(avg(`a`.`Show me Your TDs`),2) AS `Show me Your TDs`,round(avg(`a`.`Latvian Battle Nuns`),2) AS `Latvian Battle Nuns`,round(avg(`a`.`Missoula Reds`),2) AS `Missoula Reds`,round(avg(`a`.`Mr. McGibblets`),2) AS `Mr. McGibblets`,round(avg(`a`.`Reno Quails`),2) AS `Reno Quails`,round(avg(`a`.`Silicon Sudo Pirates`),2) AS `Silicon Sudo Pirates`,round(avg(`a`.`Sparks Scorpions`),2) AS `Sparks Scorpions`,round(avg(`a`.`Touchdowns RX`),2) AS `Touchdowns RX`,round(avg(`a`.`Wakanda Forever`),2) AS `Wakanda Forever` from (select 'Average' AS `label`,(case `teams`.`name` when 'Bishop Sycamore' then `scores`.`played_score` end) AS `Bishop Sycamore`,(case `teams`.`name` when 'Buffalo West' then `scores`.`played_score` end) AS `Buffalo West`,(case `teams`.`name` when 'Dakstreet Boys' then `scores`.`played_score` end) AS `Dakstreet Boys`,(case `teams`.`name` when 'Show me Your TDs' then `scores`.`played_score` end) AS `Show me Your TDs`,(case `teams`.`name` when 'Latvian Battle Nuns' then `scores`.`played_score` end) AS `Latvian Battle Nuns`,(case `teams`.`name` when 'Missoula Reds' then `scores`.`played_score` end) AS `Missoula Reds`,(case `teams`.`name` when 'Mr. McGibblets' then `scores`.`played_score` end) AS `Mr. McGibblets`,(case `teams`.`name` when 'Reno Quails' then `scores`.`played_score` end) AS `Reno Quails`,(case `teams`.`name` when 'Silicon Sudo Pirates' then `scores`.`played_score` end) AS `Silicon Sudo Pirates`,(case `teams`.`name` when 'Sparks Scorpions' then `scores`.`played_score` end) AS `Sparks Scorpions`,(case `teams`.`name` when 'Touchdowns RX' then `scores`.`played_score` end) AS `Touchdowns RX`,(case `teams`.`name` when 'Wakanda Forever' then `scores`.`played_score` end) AS `Wakanda Forever` from (`scores` join `teams` on((`scores`.`team_id` = `teams`.`id`)))) `a` group by `a`.`label` union select `a`.`label` AS `label`,round((max(`a`.`Bishop Sycamore`) - min(`a`.`Bishop Sycamore`)),2) AS `Bishop Sycamore`,round((max(`a`.`Buffalo West`) - min(`a`.`Buffalo West`)),2) AS `Buffalo West`,round((max(`a`.`Dakstreet Boys`) - min(`a`.`Dakstreet Boys`)),2) AS `Dakstreet Boys`,round((max(`a`.`Show me Your TDs`) - min(`a`.`Show me Your TDs`)),2) AS `Show me Your TDs`,round((max(`a`.`Latvian Battle Nuns`) - min(`a`.`Latvian Battle Nuns`)),2) AS `Latvian Battle Nuns`,round((max(`a`.`Missoula Reds`) - min(`a`.`Missoula Reds`)),2) AS `Missoula Reds`,round((max(`a`.`Mr. McGibblets`) - min(`a`.`Mr. McGibblets`)),2) AS `Mr. McGibblets`,round((max(`a`.`Reno Quails`) - min(`a`.`Reno Quails`)),2) AS `Reno Quails`,round((max(`a`.`Silicon Sudo Pirates`) - min(`a`.`Silicon Sudo Pirates`)),2) AS `Silicon Sudo Pirates`,round((max(`a`.`Sparks Scorpions`) - min(`a`.`Sparks Scorpions`)),2) AS `Sparks Scorpions`,round((max(`a`.`Touchdowns RX`) - min(`a`.`Touchdowns RX`)),2) AS `Touchdowns RX`,round((max(`a`.`Wakanda Forever`) - min(`a`.`Wakanda Forever`)),2) AS `Wakanda Forever` from (select 'Margin' AS `label`,(case `teams`.`name` when 'Bishop Sycamore' then `scores`.`played_score` end) AS `Bishop Sycamore`,(case `teams`.`name` when 'Buffalo West' then `scores`.`played_score` end) AS `Buffalo West`,(case `teams`.`name` when 'Dakstreet Boys' then `scores`.`played_score` end) AS `Dakstreet Boys`,(case `teams`.`name` when 'Show me Your TDs' then `scores`.`played_score` end) AS `Show me Your TDs`,(case `teams`.`name` when 'Latvian Battle Nuns' then `scores`.`played_score` end) AS `Latvian Battle Nuns`,(case `teams`.`name` when 'Missoula Reds' then `scores`.`played_score` end) AS `Missoula Reds`,(case `teams`.`name` when 'Mr. McGibblets' then `scores`.`played_score` end) AS `Mr. McGibblets`,(case `teams`.`name` when 'Reno Quails' then `scores`.`played_score` end) AS `Reno Quails`,(case `teams`.`name` when 'Silicon Sudo Pirates' then `scores`.`played_score` end) AS `Silicon Sudo Pirates`,(case `teams`.`name` when 'Sparks Scorpions' then `scores`.`played_score` end) AS `Sparks Scorpions`,(case `teams`.`name` when 'Touchdowns RX' then `scores`.`played_score` end) AS `Touchdowns RX`,(case `teams`.`name` when 'Wakanda Forever' then `scores`.`played_score` end) AS `Wakanda Forever` from (`scores` join `teams` on((`scores`.`team_id` = `teams`.`id`)))) `a` group by `a`.`label` union select `a`.`week` AS `week`,max(`a`.`Bishop Sycamore`) AS `Bishop Sycamore`,max(`a`.`Buffalo West`) AS `Buffalo West`,max(`a`.`Dakstreet Boys`) AS `Dakstreet Boys`,max(`a`.`Show me Your TDs`) AS `Show me Your TDs`,max(`a`.`Latvian Battle Nuns`) AS `Latvian Battle Nuns`,max(`a`.`Missoula Reds`) AS `Missoula Reds`,max(`a`.`Mr. McGibblets`) AS `Mr. McGibblets`,max(`a`.`Reno Quails`) AS `Reno Quails`,max(`a`.`Silicon Sudo Pirates`) AS `Silicon Sudo Pirates`,max(`a`.`Sparks Scorpions`) AS `Sparks Scorpions`,max(`a`.`Touchdowns RX`) AS `Touchdowns RX`,max(`a`.`Wakanda Forever`) AS `Wakanda Forever` from (select `scores`.`week` AS `week`,(case `teams`.`name` when 'Bishop Sycamore' then `scores`.`played_score` end) AS `Bishop Sycamore`,(case `teams`.`name` when 'Buffalo West' then `scores`.`played_score` end) AS `Buffalo West`,(case `teams`.`name` when 'Dakstreet Boys' then `scores`.`played_score` end) AS `Dakstreet Boys`,(case `teams`.`name` when 'Show me Your TDs' then `scores`.`played_score` end) AS `Show me Your TDs`,(case `teams`.`name` when 'Latvian Battle Nuns' then `scores`.`played_score` end) AS `Latvian Battle Nuns`,(case `teams`.`name` when 'Missoula Reds' then `scores`.`played_score` end) AS `Missoula Reds`,(case `teams`.`name` when 'Mr. McGibblets' then `scores`.`played_score` end) AS `Mr. McGibblets`,(case `teams`.`name` when 'Reno Quails' then `scores`.`played_score` end) AS `Reno Quails`,(case `teams`.`name` when 'Silicon Sudo Pirates' then `scores`.`played_score` end) AS `Silicon Sudo Pirates`,(case `teams`.`name` when 'Sparks Scorpions' then `scores`.`played_score` end) AS `Sparks Scorpions`,(case `teams`.`name` when 'Touchdowns RX' then `scores`.`played_score` end) AS `Touchdowns RX`,(case `teams`.`name` when 'Wakanda Forever' then `scores`.`played_score` end) AS `Wakanda Forever` from (`scores` join `teams` on((`scores`.`team_id` = `teams`.`id`)))) `a` group by `a`.`week`");

    }

    /**
     * Reverse the migrations.
     *
     * @return void
     */
    public function down()
    {
        Schema::dropIfExists('manager_stats');
        Schema::dropIfExists('awards');
        Schema::dropIfExists('cumulative_points');
        Schema::dropIfExists('matchup_results');
        Schema::dropIfExists('matchup_scores');
        Schema::dropIfExists('projections');
        Schema::dropIfExists('threshold_winners');
        Schema::dropIfExists('weekly_stats');

    }
};
